#version 330 core

uniform vec4 outColor;
uniform sampler2D u_texture;
uniform vec4 positionLight;
uniform vec4 positionCam;

in vec2 UV;
in vec4 normalW; //Normal en coordenadas mundo
in vec4 fragPosition; //posicion del fragmento en coordenadas mundo

// Ouput data
out vec4 color;

void main()
{
	//----Calculo de la difusa
	vec4 dirL = normalize(positionLight - fragPosition);
	float diff = dot(normalize(normalW),normalize(-dirL));

	//----Calculo de especular
	//(poner el lightSceneObject en la misma posicion que la camara para probar)
	float m_shi = 10.0f; //mas grande este valor mas brillante el objeto
	vec4 matColor = texture(u_texture,UV);
	vec4 dirCam = normalize(positionCam - fragPosition);
	vec4 r = -dirL + 2 * dot(normalW,dirL) * normalW;
	vec4 spec = max(0.0,pow(dot(r,dirCam),m_shi))*vec4(0.5,0.5,0.5,1); //la componente especular del material,
	                                                                   //la sacas de la textura

	color = diff * matColor + spec;
	//color = spec;
	//	color = vec4(0,0,diff,1);

}