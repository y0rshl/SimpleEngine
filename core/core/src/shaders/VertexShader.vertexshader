#version 330 core
// Uniform es que no var√≠a dentro del contexto actual
// mat4 es un tipo de variable
// mvp es el nombre de la variable

uniform mat4 mvp;
uniform mat4 m;

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec2 vertexUV;
layout(location = 2) in vec3 vertexNormal;
layout(location = 3) in vec3 tangent;
layout(location = 4) in vec3 bitangent;

// Coordenadas de textura
out vec2 UV;
out vec3 normal;
out vec3 fragVertex;
out mat3 TBN;

void main(){
    UV = vertexUV;
    gl_Position = mvp * vec4(vertexPosition_modelspace.xyz, 1.0);
    fragVertex = (m * vec4(vertexPosition_modelspace.xyz, 1.0)).xyz;
    normal = normalize(m * vec4(vertexNormal, 0)).xyz;
    vec3 T = normalize(vec3(m * vec4(tangent,   0.0)));
    vec3 B = normalize(vec3(m * vec4(bitangent, 0.0)));
    vec3 N = normalize(vec3(m * vec4(normal,    0.0)));
    mat3 TBN = mat3(T, B, N);
}

