#version 330 core

uniform mat4 mvp;
uniform mat4 m;

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec2 vertexUV;
layout(location = 2) in vec3 vertexNormal;
layout(location = 3) in vec3 tangent;
layout(location = 4) in vec3 bitangent;

void main(){
    gl_Position = mvp * vec4(vertexPosition_modelspace, 1.0f);
}

